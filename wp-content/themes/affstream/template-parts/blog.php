<section class="blog">
    <style>
        @media screen and (min-width: 768px) {
            .home-blog-title {
                background-image: url('<?= get_template_directory_uri() . '/icon/blog-title-bg.svg' ?>');
            }
        }

        @media screen and (max-width: 767px) {
            .home-blog-title {
                background-image: url('<?= get_template_directory_uri() . '/icon/blog-title-bg-mobile.svg' ?>');
            }
        }
    </style>
    <div class="home-blog-title wow animate__animated  animate__fadeInLeft ">
        <svg class="" width="266" height="114" viewBox="0 0 266 114" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M62.6172 82H35.6152L46.1084 32.6787H68.9746C78.75 32.6787 83.6377 37.293 83.6377 43.1719C83.6377 49.8027 78.8184 54.7246 72.0166 55.9893L71.9824 56.2627C77.1777 57.459 81.1426 61.1504 81.1426 66.2773C81.1426 75.4375 73.3496 82 62.6172 82ZM58.3105 41.668L56.1914 51.6826H62.3438C66.4795 51.6826 69.2139 49.1875 69.2139 45.8037C69.2139 43.377 67.4365 41.668 63.916 41.668H58.3105ZM51.8848 72.0537H58.9258C63.7451 72.0537 66.7188 69.4219 66.7188 65.3545C66.7188 62.5176 64.6338 60.6719 60.6348 60.6719H54.2773L51.8848 72.0537ZM120.142 70.1738L117.612 82H83.0566L93.5498 32.6787H108.042L100.078 70.1738H120.142ZM151.108 43.377C144.478 43.377 138.838 51.2725 138.838 60.9795C138.838 67.2344 142.085 71.3018 147.075 71.3018C153.706 71.3018 159.38 63.4404 159.38 53.665C159.38 47.376 156.099 43.377 151.108 43.377ZM146.631 82.8545C132.549 82.8545 124.141 73.8311 124.141 61.8682C124.141 43.7871 136.309 31.8242 151.45 31.8242C165.908 31.8242 174.077 40.8818 174.077 52.8105C174.077 70.96 161.738 82.8545 146.631 82.8545ZM226.816 54.998L225.928 60.2617C223.467 74.9248 214.375 82.8545 200.396 82.8545C187.236 82.8545 178.35 74.4805 178.35 61.6289C178.35 44.2656 189.834 31.8242 206.24 31.8242C218.887 31.8242 227.637 39.6855 227.637 48.2988C227.637 48.6406 227.603 49.1191 227.568 49.3926H213.691C213.418 45.9062 210.342 43.2402 205.83 43.2402C198.379 43.2402 193.081 50.8281 193.081 61.0137C193.081 67.4395 196.26 71.4385 202.104 71.4385C206.548 71.4385 210.137 68.4648 211.128 64.6367H203.164L205.215 54.998H226.816Z"
                  fill="#EDEDFF"/>
            <path d="M35.6152 82L11.1625 76.7977C9.59278 84.1759 11.4385 91.8685 16.1851 97.7312C20.9318 103.594 28.0719 107 35.6152 107V82ZM46.1084 32.6787V7.67871C34.3062 7.67871 24.1116 15.9325 21.6557 27.4764L46.1084 32.6787ZM72.0166 55.9893L67.4467 31.4105C56.7444 33.4004 48.5599 42.0867 47.2097 52.8884L72.0166 55.9893ZM71.9824 56.2627L47.1755 53.1618C45.5851 65.8846 53.8778 77.7481 66.3726 80.6252L71.9824 56.2627ZM58.3105 41.668V16.668C46.498 16.668 36.2976 24.9359 33.8521 36.4925L58.3105 41.668ZM56.1914 51.6826L31.733 46.5071C30.1724 53.8824 32.0231 61.5681 36.7699 67.4245C41.5168 73.2809 48.6528 76.6826 56.1914 76.6826V51.6826ZM51.8848 72.0537L27.4195 66.9109C25.8699 74.2825 27.7267 81.9598 32.4738 87.8085C37.2209 93.6572 44.352 97.0537 51.8848 97.0537V72.0537ZM54.2773 60.6719V35.6719C42.4523 35.6719 32.2446 43.9569 29.812 55.529L54.2773 60.6719ZM62.6172 57H35.6152V107H62.6172V57ZM60.068 87.2023L70.5611 37.8811L21.6557 27.4764L11.1625 76.7977L60.068 87.2023ZM46.1084 57.6787H68.9746V7.67871H46.1084V57.6787ZM68.9746 57.6787C70.2297 57.6787 67.9167 57.9994 64.6857 55.5028C63.01 54.2079 61.3873 52.3529 60.2286 49.9646C59.0774 47.5918 58.6377 45.217 58.6377 43.1719H108.638C108.638 32.6672 103.967 22.6685 95.2581 15.9386C87.1395 9.66511 77.4949 7.67871 68.9746 7.67871V57.6787ZM58.6377 43.1719C58.6377 40.1034 59.869 36.9435 62.0416 34.5992C64.0631 32.4181 66.2084 31.6407 67.4467 31.4105L76.5865 80.568C92.8582 77.5426 108.638 64.1082 108.638 43.1719H58.6377ZM47.2097 52.8884L47.1755 53.1618L96.7894 59.3636L96.8235 59.0901L47.2097 52.8884ZM66.3726 80.6252C64.9991 80.3089 62.6975 79.4292 60.4545 77.0868C57.9748 74.4974 56.1426 70.6268 56.1426 66.2773H106.143C106.143 45.8355 90.1245 34.7859 77.5922 31.9002L66.3726 80.6252ZM56.1426 66.2773C56.1426 64.9596 56.4376 63.4349 57.1486 61.9285C57.8507 60.4408 58.8041 59.295 59.7493 58.4947C61.6245 56.9069 62.979 57 62.6172 57V107C83.0969 107 106.143 92.9815 106.143 66.2773H56.1426ZM33.8521 36.4925L31.733 46.5071L80.6498 56.8581L82.769 46.8435L33.8521 36.4925ZM56.1914 76.6826H62.3438V26.6826H56.1914V76.6826ZM62.3438 76.6826C69.3886 76.6826 77.2634 74.519 83.7591 68.8556C90.4647 63.009 94.2139 54.6405 94.2139 45.8037H44.2139C44.2139 40.3507 46.5959 34.9217 50.9004 31.1686C54.9949 27.5986 59.4346 26.6826 62.3438 26.6826V76.6826ZM94.2139 45.8037C94.2139 38.0411 91.1057 29.581 83.8072 23.5518C77.0724 17.9882 69.4207 16.668 63.916 16.668V66.668C61.9318 66.668 56.9291 66.2022 51.9631 62.0998C46.4333 57.5318 44.2139 51.1396 44.2139 45.8037H94.2139ZM63.916 16.668H58.3105V66.668H63.916V16.668ZM51.8848 97.0537H58.9258V47.0537H51.8848V97.0537ZM58.9258 97.0537C65.7186 97.0537 74.0141 95.1785 81.0028 89.1216C88.3735 82.7336 91.7188 73.8836 91.7188 65.3545H41.7188C41.7188 60.8927 43.5771 55.3924 48.2563 51.3371C52.5533 47.613 56.9523 47.0537 58.9258 47.0537V97.0537ZM91.7188 65.3545C91.7188 57.2706 88.4342 48.5335 80.7838 42.4197C73.8691 36.8937 66.0983 35.6719 60.6348 35.6719V85.6719C59.1703 85.6719 54.4414 85.3729 49.569 81.479C43.9609 76.9972 41.7188 70.6015 41.7188 65.3545H91.7188ZM60.6348 35.6719H54.2773V85.6719H60.6348V35.6719ZM29.812 55.529L27.4195 66.9109L76.3501 77.1966L78.7426 65.8147L29.812 55.529ZM120.142 70.1738L144.589 75.4024C146.167 68.0213 144.327 60.322 139.58 54.4531C134.834 48.5841 127.69 45.1738 120.142 45.1738V70.1738ZM117.612 82V107C129.404 107 139.593 98.7599 142.059 87.2286L117.612 82ZM83.0566 82L58.6039 76.7977C57.0342 84.1759 58.8799 91.8685 63.6265 97.7312C68.3732 103.594 75.5133 107 83.0566 107V82ZM93.5498 32.6787V7.67871C81.7476 7.67871 71.5531 15.9325 69.0971 27.4764L93.5498 32.6787ZM108.042 32.6787L132.496 37.8728C134.063 30.4955 132.216 22.805 127.469 16.9442C122.723 11.0834 115.584 7.67871 108.042 7.67871V32.6787ZM100.078 70.1738L75.6236 64.9798C74.0567 72.3571 75.904 80.0475 80.6507 85.9083C85.3974 91.7691 92.5362 95.1738 100.078 95.1738V70.1738ZM95.6945 64.9453L93.1652 76.7714L142.059 87.2286L144.589 75.4024L95.6945 64.9453ZM117.612 57H83.0566V107H117.612V57ZM107.509 87.2023L118.003 37.8811L69.0971 27.4764L58.6039 76.7977L107.509 87.2023ZM93.5498 57.6787H108.042V7.67871H93.5498V57.6787ZM83.5875 27.4846L75.6236 64.9798L124.533 75.3679L132.496 37.8728L83.5875 27.4846ZM100.078 95.1738H120.142V45.1738H100.078V95.1738ZM151.108 18.377C137.238 18.377 127.366 26.5701 122.029 34.1684C116.551 41.9665 113.838 51.4973 113.838 60.9795H163.838C163.838 60.7546 163.944 61.4841 162.944 62.9078C162.085 64.1316 158.348 68.377 151.108 68.377V18.377ZM113.838 60.9795C113.838 68.1883 115.699 76.7552 121.545 84.0809C127.822 91.9458 137.133 96.3018 147.075 96.3018V46.3018C152.027 46.3018 157.219 48.624 160.625 52.8915C163.601 56.6198 163.838 60.0256 163.838 60.9795H113.838ZM147.075 96.3018C160.891 96.3018 170.773 88.1756 176.146 80.5555C181.656 72.7412 184.38 63.1841 184.38 53.665H134.38C134.38 53.9214 134.267 53.1826 135.282 51.7428C136.161 50.4972 139.89 46.3018 147.075 46.3018V96.3018ZM184.38 53.665C184.38 46.4055 182.492 37.7849 176.555 30.4433C170.202 22.5866 160.89 18.377 151.108 18.377V68.377C146.317 68.377 141.141 66.1668 137.676 61.8818C134.627 58.1121 134.38 54.6355 134.38 53.665H184.38ZM146.631 57.8545C145.782 57.8545 145.61 57.721 145.914 57.8346C146.241 57.9567 146.862 58.2723 147.523 58.9137C148.182 59.5543 148.637 60.2832 148.896 60.933C149.147 61.5627 149.141 61.9231 149.141 61.8682H99.1406C99.1406 73.8464 103.458 85.8177 112.687 94.7811C121.92 103.749 134.14 107.854 146.631 107.854V57.8545ZM149.141 61.8682C149.141 58.5435 150.18 57.351 150.335 57.1865C150.466 57.0467 150.569 56.9866 150.659 56.948C150.747 56.9102 150.984 56.8242 151.45 56.8242V6.82422C121.062 6.82422 99.1406 31.4652 99.1406 61.8682H149.141ZM151.45 56.8242C152.457 56.8242 152.701 56.9801 152.411 56.8727C152.09 56.7539 151.432 56.426 150.728 55.7389C150.025 55.0539 149.56 54.2871 149.303 53.6335C149.058 53.0072 149.077 52.6825 149.077 52.8105H199.077C199.077 41.0335 194.94 29.0186 185.643 19.9493C176.329 10.8621 163.999 6.82422 151.45 6.82422V56.8242ZM149.077 52.8105C149.077 56.0896 148.048 57.2576 147.882 57.4326C147.702 57.6222 147.432 57.8545 146.631 57.8545V107.854C176.771 107.854 199.077 83.5091 199.077 52.8105H149.077ZM226.816 54.998L251.468 59.1599C252.692 51.9046 250.659 44.4781 245.909 38.8588C241.159 33.2395 234.174 29.998 226.816 29.998V54.998ZM225.928 60.2617L201.277 56.0998C201.275 56.1078 201.274 56.1158 201.273 56.1238L225.928 60.2617ZM227.568 49.3926V74.3926C240.176 74.3926 250.811 65.0042 252.375 52.4934L227.568 49.3926ZM213.691 49.3926L188.768 51.3474C189.788 64.3564 200.642 74.3926 213.691 74.3926V49.3926ZM211.128 64.6367L235.33 70.9033C237.269 63.415 235.632 55.451 230.897 49.3342C226.163 43.2173 218.863 39.6367 211.128 39.6367V64.6367ZM203.164 64.6367L178.711 59.434C177.142 66.8123 178.987 74.505 183.734 80.3678C188.48 86.2306 195.621 89.6367 203.164 89.6367V64.6367ZM205.215 54.998V29.998C193.413 29.998 183.218 38.2517 180.762 49.7954L205.215 54.998ZM202.165 50.8362L201.277 56.0998L250.579 64.4236L251.468 59.1599L202.165 50.8362ZM201.273 56.1238C201.009 57.6943 200.669 58.4731 200.551 58.7075C200.453 58.901 200.543 58.6617 200.949 58.3033C201.366 57.9356 201.754 57.7631 201.88 57.7202C201.958 57.6936 201.534 57.8545 200.396 57.8545V107.854C212.241 107.854 224.272 104.397 234.013 95.8103C243.638 87.3255 248.647 75.9329 250.583 64.3997L201.273 56.1238ZM200.396 57.8545C199.152 57.8545 200.195 57.5375 201.722 58.9985C202.419 59.6657 202.891 60.4207 203.15 61.0684C203.4 61.6926 203.35 61.9483 203.35 61.6289H153.35C153.35 74.0353 157.783 86.1563 167.154 95.1236C176.414 103.984 188.479 107.854 200.396 107.854V57.8545ZM203.35 61.6289C203.35 58.4929 204.327 57.3724 204.431 57.2606C204.519 57.1662 204.598 57.108 204.737 57.0488C204.878 56.9889 205.33 56.8242 206.24 56.8242V6.82422C191.414 6.82422 177.714 12.5915 167.854 23.17C158.115 33.6198 153.35 47.4017 153.35 61.6289H203.35ZM206.24 56.8242C207.426 56.8242 207.085 57.1785 205.978 56.2842C204.929 55.4379 202.637 52.8156 202.637 48.2988H252.637C252.637 21.1451 227.429 6.82422 206.24 6.82422V56.8242ZM202.637 48.2988C202.637 47.9892 202.644 47.753 202.649 47.6146C202.655 47.466 202.662 47.3431 202.668 47.2444C202.675 47.1453 202.683 47.0335 202.695 46.9045C202.705 46.7894 202.726 46.5766 202.761 46.2917L252.375 52.4934C252.526 51.2914 252.637 49.7734 252.637 48.2988H202.637ZM227.568 24.3926H213.691V74.3926H227.568V24.3926ZM238.615 47.4378C237.09 27.9919 220.206 18.2402 205.83 18.2402V68.2402C203.179 68.2402 199.323 67.4258 195.659 64.4713C191.882 61.426 189.19 56.7265 188.768 51.3474L238.615 47.4378ZM205.83 18.2402C192.675 18.2402 182.403 25.2249 176.292 33.8128C170.432 42.0483 168.081 51.8501 168.081 61.0137H218.081C218.081 59.9917 218.379 60.9068 217.031 62.8019C216.307 63.819 215.019 65.2088 212.97 66.3639C210.841 67.5636 208.352 68.2402 205.83 68.2402V18.2402ZM168.081 61.0137C168.081 68.0209 169.796 77.0766 176.315 84.7823C183.344 93.0915 193.081 96.4385 202.104 96.4385V46.4385C205.283 46.4385 210.509 47.7859 214.487 52.4892C217.956 56.5889 218.081 60.4322 218.081 61.0137H168.081ZM202.104 96.4385C217.968 96.4385 231.489 85.7353 235.33 70.9033L186.926 58.3702C188.784 51.1944 195.127 46.4385 202.104 46.4385V96.4385ZM211.128 39.6367H203.164V89.6367H211.128V39.6367ZM227.617 69.8394L229.667 60.2007L180.762 49.7954L178.711 59.434L227.617 69.8394ZM205.215 79.998H226.816V29.998H205.215V79.998Z"
                  fill="url(#paint0_linear_537_1415)"/>
            <path d="M62.6172 82H35.6152L46.1084 32.6787H68.9746C78.75 32.6787 83.6377 37.293 83.6377 43.1719C83.6377 49.8027 78.8184 54.7246 72.0166 55.9893L71.9824 56.2627C77.1777 57.459 81.1426 61.1504 81.1426 66.2773C81.1426 75.4375 73.3496 82 62.6172 82ZM58.3105 41.668L56.1914 51.6826H62.3438C66.4795 51.6826 69.2139 49.1875 69.2139 45.8037C69.2139 43.377 67.4365 41.668 63.916 41.668H58.3105ZM51.8848 72.0537H58.9258C63.7451 72.0537 66.7188 69.4219 66.7188 65.3545C66.7188 62.5176 64.6338 60.6719 60.6348 60.6719H54.2773L51.8848 72.0537ZM120.142 70.1738L117.612 82H83.0566L93.5498 32.6787H108.042L100.078 70.1738H120.142ZM151.108 43.377C144.478 43.377 138.838 51.2725 138.838 60.9795C138.838 67.2344 142.085 71.3018 147.075 71.3018C153.706 71.3018 159.38 63.4404 159.38 53.665C159.38 47.376 156.099 43.377 151.108 43.377ZM146.631 82.8545C132.549 82.8545 124.141 73.8311 124.141 61.8682C124.141 43.7871 136.309 31.8242 151.45 31.8242C165.908 31.8242 174.077 40.8818 174.077 52.8105C174.077 70.96 161.738 82.8545 146.631 82.8545ZM226.816 54.998L225.928 60.2617C223.467 74.9248 214.375 82.8545 200.396 82.8545C187.236 82.8545 178.35 74.4805 178.35 61.6289C178.35 44.2656 189.834 31.8242 206.24 31.8242C218.887 31.8242 227.637 39.6855 227.637 48.2988C227.637 48.6406 227.603 49.1191 227.568 49.3926H213.691C213.418 45.9062 210.342 43.2402 205.83 43.2402C198.379 43.2402 193.081 50.8281 193.081 61.0137C193.081 67.4395 196.26 71.4385 202.104 71.4385C206.548 71.4385 210.137 68.4648 211.128 64.6367H203.164L205.215 54.998H226.816Z"
                  fill="#EDEDFF"/>
            <defs>
                <linearGradient id="paint0_linear_537_1415" x1="35" y1="15" x2="234.264" y2="74.7906"
                                gradientUnits="userSpaceOnUse">
                    <stop stop-color="#0C62FD"/>
                    <stop offset="1" stop-color="#1035B8"/>
                </linearGradient>
            </defs>
        </svg>
    </div>
    <div class="container">
        <div class="top-blog">
			<?php
			$firstPost     = get_field( 'enter_blog_page' );
			$firstPostData = get_post( $firstPost );
			if ( $firstPostData ) {
				?>
				<?php echo get_the_post_thumbnail( $firstPostData->ID ); ?>
                <div class="info-container">
                    <div class="category"></div>
                    <h3><?php echo $firstPostData->post_title; ?></h3>
                    <p><?php echo $firstPostData->post_excerpt; ?></p>
                    <a class="see-more" href="<?php echo get_permalink( $firstPostData->ID ); ?>">see more
                        <svg width="20" height="20" viewBox="0 0 15 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M6.11458 13.7425L9.62257 11.7485L12.1399 10.3409L12.1422 10.3396C12.5566 10.1065 12.9032 9.76862 13.1453 9.3583C13.3874 8.94784 13.5156 8.48031 13.5156 8.00325C13.5156 7.5262 13.3874 7.05867 13.1453 6.64821C12.9034 6.23823 12.5572 5.90054 12.1432 5.6675C12.1429 5.66731 12.1425 5.66712 12.1422 5.66693L6.11401 2.26298C6.11361 2.26276 6.11321 2.26254 6.11282 2.26231C4.33492 1.25431 2.03583 2.48763 2.03583 4.59758L2.03583 11.4089C2.03583 13.5224 4.33834 14.746 6.11214 13.7439L6.11458 13.7425Z"
                                  stroke="#EDEDFF" stroke-width="2.15246"/>
                        </svg>
                    </a>
                </div>
				<?php
			}
			?>
        </div>
        <div class="other-blogs-pages">
            <div class="swiper blog-slider">
                <div class="swiper-wrapper">
					<?php
					$featured_posts = get_field( 'enter_blog_page' );
					if ( $featured_posts ): ?>
						<?php foreach ( $featured_posts as $post ):
							setup_postdata( $post ); ?>
                            <div class="swiper-slide">
                                <div class="blog-post">
				                    <?= get_the_post_thumbnail($post->ID, 'medium') ?>
                                </div>
                            </div>
						<?php endforeach; ?>
						<?php
						wp_reset_postdata(); ?>
					<?php endif; ?>
                </div>
            </div>
        </div>
    </div>
</section>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    var swiper = new Swiper('.blog-slider', {
      slidesPerView: 5,
      spaceBetween: 20,
      pagination: {
        el: '.swiper-pagination',
        clickable: true,
      },
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
      },
      breakpoints: {
        0: {
          slidesPerView: 1.5,
          centeredSlides: true,
          initialSlide: 2,
        },
        768: {
          spaceBetween: 10,
          slidesPerView: 4,
        },
        1300: {
          slidesPerView: 4,
          allowTouchMove: false,
        },
        1600: {
          slidesPerView: 5,
          spaceBetween: 30,
          allowTouchMove: false,
        },
      }
    });
  });
</script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
  var ajaxurl = '<?php echo admin_url( 'admin-ajax.php' ); ?>';

  jQuery(document).ready(function ($) {
    $('.top-blog img').attr('src', '<?php echo get_the_post_thumbnail_url( $firstPostData->ID ); ?>');
    $('.top-blog h3').text('<?php echo $firstPostData->post_title; ?>');
    $('.top-blog p').text('<?php echo $firstPostData->post_excerpt; ?>');
    $('.top-blog a.see-more').attr('href', '<?php echo get_permalink( $firstPostData->ID ); ?>');
    updatePostLabels($('.top-blog'), <?php echo $firstPostData->ID; ?>);

    $('.blog-post').on('click', function () {
      var postId = $(this).data('post-id');

      $.ajax({
        url: ajaxurl,
        type: 'POST',
        data: {
          action: 'load_post_data',
          post_id: postId
        },
        success: function (response) {
          var postData = response.data;
          $('.top-blog img').attr('src', postData.thumbnail_url);
          $('.top-blog h3').text(postData.title);
          $('.top-blog p').text(postData.excerpt);
          $('.top-blog a.see-more').attr('href', postData.permalink);
          updatePostLabels($('.top-blog'), postId);
        },
        error: function (xhr, status, error) {
          console.log(error);
        }
      });

      // Додавання активного класу до вибраного поста
      $('.blog-post').removeClass('active');
      $(this).addClass('active');
    });

    function updatePostLabels(container, postId) {
      var labelsContainer = container.find('.post-labels');
      labelsContainer.empty();
      labelsContainer.append('<div class="loading-labels"></div>');

      $.ajax({
        url: ajaxurl,
        type: 'POST',
        data: {
          action: 'load_post_labels',
          postId: postId
        },
        success: function (response) {
          var labelsData = response.data;
          labelsContainer.empty();
          if (labelsData && labelsData.length > 0) {
            labelsData.forEach(function (label) {
              labelsContainer.append('<div class="label">' + label + '</div>');
            });
          } else {
            labelsContainer.append('<span class="no-labels">No labels found.</span>');
          }
        },
        error: function (xhr, status, error) {
          labelsContainer.empty();
          labelsContainer.append('<span class="error-labels">Error loading labels.</span>');
          console.log(error);
        }
      });
    }

  });
</script>
