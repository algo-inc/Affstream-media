{"version":3,"file":"FelteField-d2df98c7.js","sources":["../../src/FelteField.ts"],"sourcesContent":["import type { FieldValue } from '@felte/core';\nimport { createField } from '@felte/core';\n\nfunction failFor(name: string) {\n  return function () {\n    throw new TypeError(\n      `Can't call \"${name}\" on HTMLFelteFieldElement. The element is not ready yet.`\n    );\n  };\n}\n\nfunction booleanCoverter(value: string) {\n  return value === '' || (!!value && value !== 'false');\n}\n\nexport class FelteField<\n  Value extends FieldValue = FieldValue\n> extends HTMLElement {\n  [key: string]: unknown;\n  static get observedAttributes() {\n    return [\n      'name',\n      'touchonchange',\n      'valueprop',\n      'inputevent',\n      'blurevent',\n      'composed',\n      'value',\n      'target',\n    ];\n  }\n\n  /** @internal */\n  static get attributeMap(): Record<\n    string,\n    { converter: (v: any) => any; name: string }\n  > {\n    return {\n      name: {\n        converter: String,\n        name: 'name',\n      },\n      touchonchange: {\n        converter: booleanCoverter,\n        name: 'touchOnChange',\n      },\n      valueprop: {\n        converter: String,\n        name: 'valueProp',\n      },\n      inputevent: {\n        converter: String,\n        name: 'inputEvent',\n      },\n      blurevent: {\n        converter: String,\n        name: 'blurEvent',\n      },\n      value: {\n        converter: String,\n        name: 'value',\n      },\n      composed: {\n        converter: booleanCoverter,\n        name: 'composed',\n      },\n      target: {\n        converter: String,\n        name: 'target',\n      },\n    };\n  }\n\n  attributeChangedCallback(name: string, oldValue: any, newValue: any) {\n    if (oldValue === newValue) return;\n    const { converter, name: propName } = FelteField.attributeMap[name];\n    this[propName] = converter(newValue);\n  }\n\n  /**\n   * @attr\n   */\n  name?: string;\n\n  /**\n   * @attr touchonchange\n   */\n  touchOnChange = false;\n\n  /**\n   * @attr valueprop\n   */\n  valueProp = 'value';\n\n  /**\n   * @attr inputevent\n   */\n  inputEvent = 'input';\n\n  /**\n   * @attr blurevent\n   */\n  blurEvent = 'focusout';\n\n  /**\n   * @attr\n   */\n  composed = false;\n\n  /**\n   * @attr\n   */\n  target?: string;\n\n  /** @internal */\n  private _value?: Value;\n  set value(newValue: Value) {\n    this._onInput?.(newValue);\n    this._value = newValue;\n  }\n\n  /**\n   * @attr\n   */\n  get value() {\n    return this._value as Value;\n  }\n\n  /** @internal */\n  private _onInput?: (value: Value) => void;\n\n  /** @internal */\n  private _onBlur: () => void = failFor('blur');\n\n  blur() {\n    this._onBlur();\n  }\n\n  /** @internal */\n  private _destroy?: () => void;\n\n  /** @internal */\n  private _ready = false;\n  get ready() {\n    return this._ready;\n  }\n\n  onfeltefieldready?(): void;\n\n  /** @internal */\n  private _element?: HTMLElement;\n\n  /** @internal */\n  private _createField() {\n    const {\n      name,\n      inputEvent,\n      blurEvent,\n      touchOnChange,\n      value: defaultValue,\n      composed,\n    } = this;\n    if (!name) throw new Error('<felte-field> must have a \"name\" attribute');\n    const element = this._element;\n    if (!element) return;\n    (element as any)[this.valueProp] = defaultValue;\n\n    const { field, onInput, onBlur } = createField(name, {\n      touchOnChange,\n      defaultValue,\n      onFormReset: () => {\n        this.value = defaultValue;\n        (element as any)[this.valueProp] = defaultValue;\n      },\n    });\n    this._onInput = onInput;\n    this._onBlur = onBlur;\n    const { destroy } = field(element);\n    const handleInput = (e: Event) => {\n      const target = composed ? e.composedPath()[0] : (e.target as any);\n      this.value = target[this.valueProp];\n    };\n    const handleBlur = () => {\n      onBlur();\n    };\n    element.addEventListener(inputEvent, handleInput);\n    element.addEventListener(blurEvent, handleBlur);\n    this._destroy = () => {\n      destroy?.();\n      element.removeEventListener(inputEvent, handleInput);\n      element.removeEventListener(inputEvent, handleBlur);\n    };\n\n    this._ready = true;\n    this.onfeltefieldready?.();\n    this.dispatchEvent(new Event('feltefieldready'));\n  }\n\n  /** @internal */\n  private _updateField = () => {\n    const element = this.target\n      ? (this.querySelector(this.target) as HTMLElement | null)\n      : (this.firstElementChild as HTMLElement | null);\n    if (!element || element === this._element) return;\n    this._element = element;\n    this._destroy?.();\n    this._destroy = undefined;\n    this._createField();\n  };\n\n  /** @internal */\n  private _observer?: MutationObserver;\n\n  connectedCallback() {\n    setTimeout(() => {\n      this._updateField();\n      this._observer = new MutationObserver(this._updateField);\n      this._observer.observe(this, { childList: true });\n    });\n  }\n\n  disconnectedCallback() {\n    this._destroy?.();\n    this._observer?.disconnect();\n  }\n}\n"],"names":["booleanCoverter","value","FelteField","HTMLElement","constructor","name","this","touchOnChange","valueProp","inputEvent","blurEvent","composed","_onBlur","TypeError","_ready","_updateField","element","target","querySelector","firstElementChild","_element","_a","_destroy","call","undefined","_createField","observedAttributes","attributeMap","converter","String","touchonchange","valueprop","inputevent","blurevent","attributeChangedCallback","oldValue","newValue","propName","_onInput","_value","blur","ready","defaultValue","Error","field","onInput","onBlur","createField","onFormReset","destroy","handleInput","e","composedPath","handleBlur","addEventListener","removeEventListener","onfeltefieldready","dispatchEvent","Event","connectedCallback","setTimeout","_observer","MutationObserver","observe","childList","disconnectedCallback","_b","disconnect"],"mappings":"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"}