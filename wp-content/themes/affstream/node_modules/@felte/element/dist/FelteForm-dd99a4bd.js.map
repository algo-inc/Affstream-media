{"version":3,"file":"FelteForm-dd99a4bd.js","sources":["../src/stores.ts","../src/FelteForm.ts"],"sourcesContent":["// Taken from https://github.com/sveltejs/svelte/blob/master/src/runtime/store/index.ts\n/** Callback to inform of a value updates. */\nexport type Subscriber<T> = (value: T) => void;\n\n/** Unsubscribes from value updates. */\nexport type Unsubscriber = () => void;\n\n/** Callback to update a value. */\nexport type Updater<T> = (value: T) => T;\n\n/** Cleanup logic callback. */\ntype Invalidator<T> = (value?: T) => void;\n\n/** Start and stop notification callbacks. */\nexport type StartStopNotifier<T> = (set: Subscriber<T>) => Unsubscriber | void;\n\n/** Pair of subscriber and invalidator. */\ntype SubscribeInvalidateTuple<T> = [Subscriber<T>, Invalidator<T>];\n\n/** Writable interface for both updating and subscribing. */\nexport interface Writable<T> {\n  /**\n   * Subscribe on value changes.\n   * @param run subscription callback\n   * @param invalidate cleanup callback\n   */\n  subscribe(\n    this: void,\n    run: Subscriber<T>,\n    invalidate?: Invalidator<T>\n  ): Unsubscriber;\n  /**\n   * Set value and inform subscribers.\n   * @param value to set\n   */\n  set(this: void, value: T): void;\n\n  /**\n   * Update value using callback and inform subscribers.\n   * @param updater callback\n   */\n  update(this: void, updater: Updater<T>): void;\n}\n\nconst subscriber_queue: any[] = [];\n\nconst noop = () => undefined;\n\nexport function safe_not_equal(a: unknown, b: unknown) {\n  return a != a\n    ? b == b\n    : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nexport function writable<T>(\n  value?: T,\n  start: StartStopNotifier<T> = noop\n): Writable<T> {\n  let stop: Unsubscriber | null;\n  const subscribers: Set<SubscribeInvalidateTuple<T>> = new Set();\n\n  function set(new_value: T): void {\n    if (safe_not_equal(value, new_value)) {\n      value = new_value;\n      if (stop) {\n        // store is ready\n        const run_queue = !subscriber_queue.length;\n        for (const subscriber of subscribers) {\n          subscriber[1]();\n          subscriber_queue.push(subscriber, value);\n        }\n        if (run_queue) {\n          for (let i = 0; i < subscriber_queue.length; i += 2) {\n            subscriber_queue[i][0](subscriber_queue[i + 1]);\n          }\n          subscriber_queue.length = 0;\n        }\n      }\n    }\n  }\n\n  function update(fn: Updater<T>): void {\n    set(fn(value as any));\n  }\n\n  function subscribe(\n    run: Subscriber<T>,\n    invalidate: Invalidator<T> = noop\n  ): Unsubscriber {\n    const subscriber: SubscribeInvalidateTuple<T> = [run, invalidate];\n    subscribers.add(subscriber);\n    if (subscribers.size === 1) {\n      stop = start(set) || noop;\n    }\n    run(value as any);\n\n    return () => {\n      subscribers.delete(subscriber);\n      if (stop && subscribers.size === 0) {\n        stop();\n        stop = null;\n      }\n    };\n  }\n\n  return { set, update, subscribe };\n}\n","export { FelteSubmitError } from '@felte/core';\nexport type {\n  FelteSubmitEvent,\n  FelteErrorEvent,\n  FelteSuccessEvent,\n} from '@felte/core';\nimport type {\n  Obj,\n  FormConfig,\n  Keyed,\n  Errors,\n  Touched,\n  Helpers,\n  Form,\n  Paths,\n  FieldsSetter,\n  ObjectSetter,\n  FelteSubmitEvent,\n  FelteErrorEvent,\n  FelteSuccessEvent,\n  Readable,\n} from '@felte/core';\nimport { createForm, isEqual, createEventConstructors } from '@felte/core';\nimport { writable } from './stores';\n\ntype StoreValues<Data extends Obj> = {\n  [key: string]: unknown;\n\n  data?: Keyed<Data>;\n\n  errors?: Errors<Data>;\n\n  touched?: Touched<Data>;\n\n  warnings?: Errors<Data>;\n\n  isSubmitting: boolean;\n\n  isDirty: boolean;\n\n  isValid?: boolean;\n\n  isValidating: boolean;\n\n  interacted: string | null;\n};\n\nfunction failFor(name: string) {\n  return function () {\n    throw new TypeError(\n      `Can't call \"${name}\" on HTMLFelteFormElement. The element is not ready yet.`\n    );\n  };\n}\n\nconst storeKeys = [\n  'data',\n  'errors',\n  'touched',\n  'warnings',\n  'isSubmitting',\n  'isDirty',\n  'isValid',\n  'isValidating',\n  'interacted',\n];\n\nfunction capitalizeFirst(value: string) {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n}\n\n/**\n * @event {CustomEvent} datachange\n * @event {CustomEvent} errorschange\n * @event {CustomEvent} warningschange\n * @event {CustomEvent} touchedchange\n * @event {CustomEvent} isvalidchange\n * @event {CustomEvent} issubmittingchange\n * @event {CustomEvent} isdirtychange\n * @event {CustomEvent} isvalidatingchange\n * @event {CustomEvent} interactedchange\n */\nexport class FelteForm<Data extends Obj = any> extends HTMLElement {\n  [key: string]: unknown;\n\n  id!: string;\n\n  /** @internal */\n  private _configuration: FormConfig<Data> = {};\n  set configuration(config: FormConfig<Data>) {\n    this._configuration = config;\n    if (this._destroy) {\n      this._destroy();\n      this._destroy = undefined;\n      this._ready = false;\n      this._createForm();\n    }\n  }\n\n  get configuration() {\n    return this._configuration;\n  }\n\n  elements?: HTMLFormElement['elements'];\n\n  /**\n   * Stores (observables)\n   *\n   * @internal\n   */\n  private _storeValues: StoreValues<Data> = {\n    data: undefined,\n    errors: undefined,\n    touched: undefined,\n    warnings: undefined,\n    isSubmitting: false,\n    isDirty: false,\n    isValid: undefined,\n    isValidating: false,\n    interacted: null,\n  };\n\n  get data() {\n    return this._storeValues.data;\n  }\n\n  onDataChange?(data: Data): void;\n\n  setData: ObjectSetter<Data, Paths<Data>> = failFor('setData');\n\n  setFields: FieldsSetter<Data, Paths<Data>> = failFor('setFields');\n\n  setInitialValues: Helpers<Data, Paths<Data>>['setInitialValues'] = failFor(\n    'setInitialValues'\n  );\n\n  addField: Helpers<Data, Paths<Data>>['addField'] = failFor('addField');\n\n  unsetField: Helpers<Data, Paths<Data>>['unsetField'] = failFor('unsetField');\n\n  swapFields: Helpers<Data, Paths<Data>>['swapFields'] = failFor('swapFields');\n\n  moveField: Helpers<Data, Paths<Data>>['moveField'] = failFor('moveField');\n\n  resetField: Helpers<Data, Paths<Data>>['resetField'] = failFor('resetField');\n\n  reset: Helpers<Data, Paths<Data>>['reset'] = failFor('reset');\n\n  submit: () => void = failFor('submit');\n\n  createSubmitHandler: Form<Data>['createSubmitHandler'] = failFor(\n    'createSubmitHandler'\n  );\n\n  get errors() {\n    return this._storeValues.errors;\n  }\n\n  onErrorsChange?(errors: Errors<Data>): void;\n\n  setErrors: Helpers<Data, Paths<Data>>['setErrors'] = failFor('setErrors');\n\n  get touched() {\n    return this._storeValues.touched;\n  }\n\n  onTouchedChange?(touched: Touched<Data>): void;\n\n  setTouched: Helpers<Data, Paths<Data>>['setTouched'] = failFor('setTouched');\n\n  get warnings() {\n    return this._storeValues.warnings;\n  }\n\n  onWarningsChange?(warnings: Errors<Data>): void;\n\n  setWarnings: Helpers<Data, Paths<Data>>['setWarnings'] = failFor(\n    'setWarnings'\n  );\n\n  get isSubmitting() {\n    return this._storeValues.isSubmitting;\n  }\n\n  onIsSubmittingChange?(isSubmitting: boolean): void;\n\n  setIsSubmitting: Helpers<Data, Paths<Data>>['setIsSubmitting'] = failFor(\n    'setIsSubmitting'\n  );\n\n  get isDirty() {\n    return this._storeValues.isDirty;\n  }\n\n  onIsDirtyChange?(isDirty: boolean): void;\n\n  setIsDirty: Helpers<Data, Paths<Data>>['setIsDirty'] = failFor('setIsDirty');\n\n  get isValid() {\n    return this._storeValues.isValid;\n  }\n\n  onIsValidChange?(isValid: boolean): void;\n\n  get isValidating() {\n    return this._storeValues.isValidating;\n  }\n\n  onIsValidatingChange?(isValidating: boolean): void;\n\n  get interacted() {\n    return this._storeValues.interacted;\n  }\n\n  onInteractedChange?(interacted: string | null): void;\n\n  setInteracted: Helpers<Data, Paths<Data>>['setInteracted'] = failFor(\n    'setInteracted'\n  );\n\n  /** @internal */\n  private _ready = false;\n  get ready() {\n    return this._ready;\n  }\n\n  onFelteReady?(): void;\n\n  validate: Helpers<Data, Paths<Data>>['validate'] = failFor('validate');\n\n  /** @internal */\n  private _formElement: HTMLFormElement | null = null;\n\n  /** @internal */\n  private _destroy?: () => void;\n\n  /** @internal */\n  private _createForm() {\n    const formElement = this._formElement;\n    if (!formElement) return;\n    const config = this.configuration;\n    this.elements = formElement.elements;\n\n    const { form, cleanup, ...rest } = createForm<Data>(config, {\n      storeFactory: writable,\n    });\n    this.setData = rest.setData;\n    this.setFields = rest.setFields;\n    this.setErrors = rest.setErrors;\n    this.setTouched = rest.setTouched;\n    this.setWarnings = rest.setWarnings;\n    this.setIsSubmitting = rest.setIsSubmitting;\n    this.setIsDirty = rest.setIsDirty;\n    this.setInteracted = rest.setInteracted;\n    this.setInitialValues = rest.setInitialValues;\n    this.validate = rest.validate;\n    this.addField = rest.addField;\n    this.unsetField = rest.unsetField;\n    this.swapFields = rest.swapFields;\n    this.moveField = rest.moveField;\n    this.resetField = rest.resetField;\n    this.reset = rest.reset;\n    this.submit = rest.handleSubmit;\n    this.createSubmitHandler = rest.createSubmitHandler;\n\n    const unsubs = storeKeys.map((key) => {\n      return (rest[key as keyof typeof rest] as Readable<any>).subscribe(\n        ($value) => {\n          if (isEqual($value, this._storeValues[key as string])) return;\n          this._storeValues[key as string] = $value;\n          const handler = this[`on${capitalizeFirst(key)}Change`];\n          if (typeof handler === 'function') handler($value);\n          this.dispatchEvent(new Event(`${key.toLowerCase()}change`));\n        }\n      );\n    });\n    const { destroy } = form(formElement);\n\n    const {\n      createSubmitEvent,\n      createErrorEvent,\n      createSuccessEvent,\n    } = createEventConstructors<Data>();\n\n    const handleFelteSubmit = (e: Event) => {\n      const event = e as FelteSubmitEvent;\n      const submitEvent = createSubmitEvent();\n      this.dispatchEvent(submitEvent);\n      if (submitEvent.defaultPrevented) event.preventDefault();\n      event.onSubmit = submitEvent.onSubmit;\n      event.onSuccess = submitEvent.onSuccess;\n      event.onError = submitEvent.onError;\n    };\n\n    const handleFelteSuccess = (e: Event) => {\n      const event = e as FelteSuccessEvent;\n      const successEvent = createSuccessEvent(event.detail);\n      this.dispatchEvent(successEvent);\n    };\n\n    const handleFelteError = (e: Event) => {\n      const event = e as FelteErrorEvent;\n      const errorEvent = createErrorEvent(event.detail);\n      this.dispatchEvent(errorEvent);\n      event.errors = errorEvent.errors;\n      if (errorEvent.defaultPrevented) event.preventDefault();\n    };\n\n    formElement.addEventListener('feltesubmit', handleFelteSubmit);\n    formElement.addEventListener('feltesuccess', handleFelteSuccess);\n    formElement.addEventListener('felteerror', handleFelteError);\n    this._destroy = () => {\n      destroy();\n      cleanup();\n      formElement.removeEventListener('feltesubmit', handleFelteSubmit);\n      formElement.removeEventListener('feltesuccess', handleFelteSuccess);\n      formElement.removeEventListener('felteerror', handleFelteError);\n      unsubs.forEach((unsub) => unsub());\n    };\n    this._ready = true;\n    this.onFelteReady?.();\n    this.dispatchEvent(\n      new Event('felteready', { bubbles: true, composed: true })\n    );\n  }\n\n  /** @internal */\n  private _updateForm = () => {\n    const formElement = this.querySelector('form') as HTMLFormElement | null;\n    if (!formElement || formElement === this._formElement) return;\n    this.dispatchEvent(\n      new Event('felteconnect', { bubbles: true, composed: true })\n    );\n    this._formElement = formElement;\n    this._destroy?.();\n    this._destroy = undefined;\n    this._createForm();\n  };\n\n  /** @internal */\n  private _observer?: MutationObserver;\n\n  connectedCallback() {\n    setTimeout(() => {\n      this._updateForm();\n      this._observer = new MutationObserver(this._updateForm);\n      this._observer.observe(this, { childList: true });\n    });\n  }\n\n  disconnectedCallback() {\n    this._destroy?.();\n    this._observer?.disconnect();\n  }\n\n  static get observedAttributes() {\n    return ['id'];\n  }\n\n  attributeChangedCallback(name: string, oldValue: any, newValue: any) {\n    if (oldValue === newValue) return;\n    switch (name) {\n      case 'id':\n        this.id = newValue;\n        break;\n    }\n  }\n}\n"],"names":[],"mappings":"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"}